const PROJECT_CODE_LEN = 10;
const FILE_NAME_LEN = 20;
const UPLOAD_BATCH_SIZE = 32;
const DELETE_BATCH_SIZE = UPLOAD_BATCH_SIZE;
const GCS_HOST = "https://storage.googleapis.com";
const ALLOWED_IMAGE_FILE_EXTENSIONS = ["jpg", "jpeg", "png", "webp"];
const ALLOWED_FILE_EXTENSIONS = ["jpg", "jpeg", "png", "webp", "json", "csv"];

const ProjectTypes = Object.freeze({
  TABULAR_CLASSIFICATION: "TABULAR_CLASSIFICATION",
  TABULAR_REGRESSION: "TABULAR_REGRESSION",
  IMAGE_CLASSIFICATION: "IMAGE_CLASSIFICATION",
  OBJECT_DETECTION: "OBJECT_DETECTION",
  IMAGE_SEGMENTATION: "IMAGE_SEGMENTATION",
  TEXT_CLASSIFICATION: "TEXT_CLASSIFICATION",
  NAMED_ENTITY_RECOGNITION: "NAMED_ENTITY_RECOGNITION",
});

const ProjectCodePrefixes = Object.freeze({
  TABULAR_CLASSIFICATION: "tab-clf",
  TABULAR_REGRESSION: "tab-reg",
  IMAGE_CLASSIFICATION: "img-clf",
  OBJECT_DETECTION: "img-obj",
  IMAGE_SEGMENTATION: "img-seg",
  TEXT_CLASSIFICATION: "txt-clf",
  NAMED_ENTITY_RECOGNITION: "txt-ner",
});

const UploadTypes = Object.freeze({
  MULTIPLE: 0,
  FOLDER: 1,
  IMAGE_LABELED_FOLDER: "IMAGE_LABELED_FOLDER",
  JSON_COCO_FORMAT: "JSON_COCO_FORMAT",
  CSV_SINGLE: "CSV_SINGLE",
  CSV_MULTIMODAL: "CSV_MULTIMODAL",

  CSV_TIMESERIES: "CSV_TIMESERIES",
});

const DatasetTypes = Object.freeze({
  CSV_MULTIMODAL: "CSV_MULTIMODAL",
  COCO_FORMAT: "COCO_FORMAT",
  TFRECORD: "TFRECORD",
  YOLOV8: "YOLOV8",
});

const ExperimentStatuses = Object.freeze({
  PROCESSING: "PROCESSING",
  DONE: "DONE",
  STOPPED: "STOPPED",
  FAILED: "FAILED",
});

export {
  PROJECT_CODE_LEN,
  FILE_NAME_LEN,
  GCS_HOST,
  UPLOAD_BATCH_SIZE,
  DELETE_BATCH_SIZE,
  ALLOWED_FILE_EXTENSIONS,
  ALLOWED_IMAGE_FILE_EXTENSIONS,
  ProjectTypes,
  ProjectCodePrefixes,
  UploadTypes,
  DatasetTypes,
  ExperimentStatuses,
};
